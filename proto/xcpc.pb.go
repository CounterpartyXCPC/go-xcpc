// Code generated by protoc-gen-go. DO NOT EDIT.
// source: xcpc.proto

package xcpctx

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type XCPCsend struct {
	Asset                string   `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
	Quantity             uint64   `protobuf:"varint,2,opt,name=quantity" json:"quantity,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	Memo                 string   `protobuf:"bytes,4,opt,name=memo" json:"memo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XCPCsend) Reset()         { *m = XCPCsend{} }
func (m *XCPCsend) String() string { return proto.CompactTextString(m) }
func (*XCPCsend) ProtoMessage()    {}
func (*XCPCsend) Descriptor() ([]byte, []int) {
	return fileDescriptor_xcpc_969e7964f9fca6c9, []int{0}
}
func (m *XCPCsend) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XCPCsend.Unmarshal(m, b)
}
func (m *XCPCsend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XCPCsend.Marshal(b, m, deterministic)
}
func (dst *XCPCsend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XCPCsend.Merge(dst, src)
}
func (m *XCPCsend) XXX_Size() int {
	return xxx_messageInfo_XCPCsend.Size(m)
}
func (m *XCPCsend) XXX_DiscardUnknown() {
	xxx_messageInfo_XCPCsend.DiscardUnknown(m)
}

var xxx_messageInfo_XCPCsend proto.InternalMessageInfo

func (m *XCPCsend) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *XCPCsend) GetQuantity() uint64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *XCPCsend) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *XCPCsend) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

type XCPCbroadcast struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	Value                int64    `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	Feefraction          int32    `protobuf:"varint,3,opt,name=feefraction" json:"feefraction,omitempty"`
	Timestamp            string   `protobuf:"bytes,4,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XCPCbroadcast) Reset()         { *m = XCPCbroadcast{} }
func (m *XCPCbroadcast) String() string { return proto.CompactTextString(m) }
func (*XCPCbroadcast) ProtoMessage()    {}
func (*XCPCbroadcast) Descriptor() ([]byte, []int) {
	return fileDescriptor_xcpc_969e7964f9fca6c9, []int{1}
}
func (m *XCPCbroadcast) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XCPCbroadcast.Unmarshal(m, b)
}
func (m *XCPCbroadcast) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XCPCbroadcast.Marshal(b, m, deterministic)
}
func (dst *XCPCbroadcast) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XCPCbroadcast.Merge(dst, src)
}
func (m *XCPCbroadcast) XXX_Size() int {
	return xxx_messageInfo_XCPCbroadcast.Size(m)
}
func (m *XCPCbroadcast) XXX_DiscardUnknown() {
	xxx_messageInfo_XCPCbroadcast.DiscardUnknown(m)
}

var xxx_messageInfo_XCPCbroadcast proto.InternalMessageInfo

func (m *XCPCbroadcast) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *XCPCbroadcast) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *XCPCbroadcast) GetFeefraction() int32 {
	if m != nil {
		return m.Feefraction
	}
	return 0
}

func (m *XCPCbroadcast) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

type XCPCTransaction struct {
	// Types that are valid to be assigned to Msgtype:
	//	*XCPCTransaction_Send
	//	*XCPCTransaction_Broadcast
	Msgtype              isXCPCTransaction_Msgtype `protobuf_oneof:"msgtype"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *XCPCTransaction) Reset()         { *m = XCPCTransaction{} }
func (m *XCPCTransaction) String() string { return proto.CompactTextString(m) }
func (*XCPCTransaction) ProtoMessage()    {}
func (*XCPCTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_xcpc_969e7964f9fca6c9, []int{2}
}
func (m *XCPCTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XCPCTransaction.Unmarshal(m, b)
}
func (m *XCPCTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XCPCTransaction.Marshal(b, m, deterministic)
}
func (dst *XCPCTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XCPCTransaction.Merge(dst, src)
}
func (m *XCPCTransaction) XXX_Size() int {
	return xxx_messageInfo_XCPCTransaction.Size(m)
}
func (m *XCPCTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_XCPCTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_XCPCTransaction proto.InternalMessageInfo

type isXCPCTransaction_Msgtype interface {
	isXCPCTransaction_Msgtype()
}

type XCPCTransaction_Send struct {
	Send *XCPCsend `protobuf:"bytes,1,opt,name=send,oneof"`
}
type XCPCTransaction_Broadcast struct {
	Broadcast *XCPCbroadcast `protobuf:"bytes,2,opt,name=broadcast,oneof"`
}

func (*XCPCTransaction_Send) isXCPCTransaction_Msgtype()      {}
func (*XCPCTransaction_Broadcast) isXCPCTransaction_Msgtype() {}

func (m *XCPCTransaction) GetMsgtype() isXCPCTransaction_Msgtype {
	if m != nil {
		return m.Msgtype
	}
	return nil
}

func (m *XCPCTransaction) GetSend() *XCPCsend {
	if x, ok := m.GetMsgtype().(*XCPCTransaction_Send); ok {
		return x.Send
	}
	return nil
}

func (m *XCPCTransaction) GetBroadcast() *XCPCbroadcast {
	if x, ok := m.GetMsgtype().(*XCPCTransaction_Broadcast); ok {
		return x.Broadcast
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*XCPCTransaction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _XCPCTransaction_OneofMarshaler, _XCPCTransaction_OneofUnmarshaler, _XCPCTransaction_OneofSizer, []interface{}{
		(*XCPCTransaction_Send)(nil),
		(*XCPCTransaction_Broadcast)(nil),
	}
}

func _XCPCTransaction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*XCPCTransaction)
	// msgtype
	switch x := m.Msgtype.(type) {
	case *XCPCTransaction_Send:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Send); err != nil {
			return err
		}
	case *XCPCTransaction_Broadcast:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Broadcast); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("XCPCTransaction.Msgtype has unexpected type %T", x)
	}
	return nil
}

func _XCPCTransaction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*XCPCTransaction)
	switch tag {
	case 1: // msgtype.send
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(XCPCsend)
		err := b.DecodeMessage(msg)
		m.Msgtype = &XCPCTransaction_Send{msg}
		return true, err
	case 2: // msgtype.broadcast
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(XCPCbroadcast)
		err := b.DecodeMessage(msg)
		m.Msgtype = &XCPCTransaction_Broadcast{msg}
		return true, err
	default:
		return false, nil
	}
}

func _XCPCTransaction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*XCPCTransaction)
	// msgtype
	switch x := m.Msgtype.(type) {
	case *XCPCTransaction_Send:
		s := proto.Size(x.Send)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *XCPCTransaction_Broadcast:
		s := proto.Size(x.Broadcast)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*XCPCsend)(nil), "xcpctx.XCPCsend")
	proto.RegisterType((*XCPCbroadcast)(nil), "xcpctx.XCPCbroadcast")
	proto.RegisterType((*XCPCTransaction)(nil), "xcpctx.XCPCTransaction")
}

func init() { proto.RegisterFile("xcpc.proto", fileDescriptor_xcpc_969e7964f9fca6c9) }

var fileDescriptor_xcpc_969e7964f9fca6c9 = []byte{
	// 258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x3f, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0x5b, 0x9a, 0xfe, 0xc9, 0x45, 0x08, 0x64, 0x81, 0x64, 0x21, 0x86, 0x28, 0x03, 0xea,
	0x94, 0xa1, 0x88, 0x2f, 0x40, 0x97, 0x8e, 0xc8, 0x62, 0x60, 0x75, 0x93, 0x2b, 0x0a, 0xc2, 0x71,
	0xb0, 0xaf, 0x28, 0x11, 0x5f, 0x1e, 0xf9, 0xd2, 0xa4, 0xdd, 0xee, 0x9d, 0xdf, 0xe9, 0xf7, 0xfc,
	0x00, 0xda, 0xa2, 0x29, 0xf2, 0xc6, 0x59, 0xb2, 0x62, 0x11, 0x66, 0x6a, 0xb3, 0x2f, 0x58, 0x7d,
	0x6c, 0xdf, 0xb6, 0x1e, 0xeb, 0x52, 0xdc, 0xc1, 0x5c, 0x7b, 0x8f, 0x24, 0xa7, 0xe9, 0x74, 0x1d,
	0xab, 0x5e, 0x88, 0x07, 0x58, 0xfd, 0x1c, 0x75, 0x4d, 0x15, 0x75, 0xf2, 0x2a, 0x9d, 0xae, 0x23,
	0x35, 0x6a, 0x21, 0x61, 0xa9, 0xcb, 0xd2, 0xa1, 0xf7, 0x72, 0xc6, 0x37, 0x83, 0x14, 0x02, 0x22,
	0x83, 0xc6, 0xca, 0x88, 0xd7, 0x3c, 0x67, 0x1d, 0x5c, 0x07, 0xd6, 0xde, 0x59, 0x5d, 0x16, 0xda,
	0x53, 0x30, 0x11, 0xb6, 0x03, 0x8f, 0xe7, 0x10, 0xe2, 0x57, 0x7f, 0x1f, 0x91, 0x59, 0x33, 0xd5,
	0x0b, 0x91, 0x42, 0x72, 0x40, 0x3c, 0x38, 0x5d, 0x50, 0x65, 0x6b, 0x86, 0xcd, 0xd5, 0xe5, 0x4a,
	0x3c, 0x42, 0x4c, 0x95, 0x41, 0x4f, 0xda, 0x34, 0x27, 0xea, 0x79, 0x91, 0xfd, 0xc1, 0x4d, 0x40,
	0xbf, 0x3b, 0x5d, 0xfb, 0xd3, 0xc1, 0x13, 0x44, 0xe1, 0xd7, 0x0c, 0x4f, 0x36, 0xb7, 0x79, 0x5f,
	0x48, 0x3e, 0xb4, 0xb1, 0x9b, 0x28, 0x7e, 0x17, 0x2f, 0x10, 0x8f, 0x89, 0x39, 0x54, 0xb2, 0xb9,
	0xbf, 0x34, 0x8f, 0x8f, 0xbb, 0x89, 0x3a, 0x3b, 0x5f, 0x63, 0x58, 0x1a, 0xff, 0x49, 0x5d, 0x83,
	0xfb, 0x05, 0x57, 0xfe, 0xfc, 0x1f, 0x00, 0x00, 0xff, 0xff, 0x3c, 0x03, 0x6a, 0x65, 0x80, 0x01,
	0x00, 0x00,
}
